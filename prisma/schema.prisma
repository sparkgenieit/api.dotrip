datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

enum Role {
  RIDER
  VENDOR
  DRIVER
  ADMIN
  SUPPORT_AGENT
  SUPER_ADMIN
}

enum AddressType {
  HOME
  OFFICE
  OTHER
}

model User {
  id        Int            @id @default(autoincrement())
  name      String
  email     String         @unique
  password  String         @default(uuid())
  phone     String?
  role      Role           @default(RIDER)

  bookings  Booking[]
  vehicles  Vehicle[]
  addresses AddressBook[]

  createdAt DateTime       @default(now())
  updatedAt DateTime       @updatedAt

  @@map("user")
}

model Vehicle {
  id                 Int       @id @default(autoincrement())
  registrationNumber String    @unique
  name               String
  model              String
  image              String
  capacity           Int
  price              Int       @default(0)
  originalPrice      Int       @default(0)

  vendorId           Int?
  vendor             User?     @relation(fields: [vendorId], references: [id])

  bookings           Booking[]
  createdAt          DateTime  @default(now())
  updatedAt          DateTime  @updatedAt

  @@map("vehicle")
}

model City {
  id           Int       @id @default(autoincrement())
  name         String
  state        String
  fromBookings Booking[] @relation("BookingFromCity")
  toBookings   Booking[] @relation("BookingToCity")

  @@map("city")
}

model TripType {
  id       Int       @id @default(autoincrement())
  label    String    @unique
  bookings Booking[]

  @@map("trip_type")
}

model Booking {
  id              Int       @id @default(autoincrement())
  userId          Int
  vehicleId       Int
  fromCityId      Int
  toCityId        Int
  pickupAddress   String
  dropAddress     String
  pickupDateTime  DateTime
  tripTypeId      Int
  fare            Float
  createdAt       DateTime  @default(now())

  user      User      @relation(fields: [userId], references: [id])
  vehicle   Vehicle   @relation(fields: [vehicleId], references: [id])
  fromCity  City      @relation("BookingFromCity", fields: [fromCityId], references: [id])
  toCity    City      @relation("BookingToCity", fields: [toCityId], references: [id])
  tripType  TripType  @relation(fields: [tripTypeId], references: [id])

  @@map("booking")
}

model AddressBook {
  id            Int          @id @default(autoincrement())
  userId        Int
  type          AddressType
  name          String
  addressLine1  String
  buildingName  String
  addressLine2  String?
  flatNo        String?
  city          String
  state         String
  phone         String
  pinCode       String
  createdAt     DateTime     @default(now())
  updatedAt     DateTime     @updatedAt

  user          User         @relation(fields: [userId], references: [id])

  @@map("address_book")
}
